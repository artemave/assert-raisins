#!/usr/bin/env node

(async () => {
  const {spawn} = require('child_process')
  const path = require('path')
  const clipboardy = require('clipboardy')
  const parseArgv = require('../lib/parseArgv')
  const retry = require('../lib/retry')

  const {node_args, file_args, donc_args} = parseArgv(process.argv.slice(2))

  if (['--help', '-h'].some(o => node_args.includes(o))) {
    console.info('Usage: donc [node options] [donc options] [files]')
    console.info('')
    console.info('Options:')
    console.info(' --only="bananas"                         only run test named "bananas"')
    console.info(" --skip-debug-url-copy-to-clipboard       don't copy debug url to clipboard (when run with --inspect-brk)")
    process.exit()
  }

  if (!file_args.length) {
    console.error('No test files given/found.')
    process.exit(1)
  }

  const child_args = [
    ...node_args,
    ...file_args,
    path.join(__dirname, '..', 'lib', 'runner.js'),
    ...donc_args
  ]

  const proc = spawn(process.execPath, child_args, { stdio: 'inherit' })

  proc.on('exit', (code, signal) => {
    process.on('exit', () => {
      if (signal) {
        process.kill(process.pid, signal)
      } else {
        process.exit(code)
      }
    })
  })

  if (child_args.includes('--inspect-brk') && !donc_args.includes('--skip-debug-url-copy-to-clipboard')) {
    await retry(async () => {
      const [inspectorInfo] = await getJson('http://localhost:9229/json/list')
      const debuggerUrl = inspectorInfo.devtoolsFrontendUrl.replace(/^chrome-/, '')

      await clipboardy.write(debuggerUrl)
      console.info(`Debug url copied to clipboard: ${debuggerUrl}`)
    })
  }

  process.on('SIGINT', () => {
    proc.kill('SIGINT')
    proc.kill('SIGTERM') // if that didn't work, we're probably in an infinite loop, so make it die.
  })
})().catch((e) => {
  console.error(e)
  process.exit(1)
})
